{"version":3,"sources":["webpack:///./src/pages/sitemap.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_ref","data","console","log","a","createElement","allFile","edges","map","_ref2","index","node","key","relativePath","prettySize","extension","birthTime","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","Header","_this","_React$Component","call","this","state","componentDidMount","render","siteTitle","props","react_default","className","gatsby_browser_entry","to","activeClassName","Component","Layout","children","_3254742343","Fragment","header","site","siteMetadata","title","siteRole","role","siteDescription","description","Date","getFullYear","href"],"mappings":"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","file":"component---src-pages-sitemap-js-5dfab3e4a022753b9997.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nexport default ({ data }) => {\n  console.log(data)\n  return (\n    <Layout>\n      <div>\n        <h1>My Site's Files</h1>\n        <table>\n          <thead>\n            <tr>\n              <th>relativePath</th>\n              <th>prettySize</th>\n              <th>extension</th>\n              <th>birthTime</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.allFile.edges.map(({ node }, index) => (\n              <tr key={index}>\n                <td>{node.relativePath}</td>\n                <td>{node.prettySize}</td>\n                <td>{node.extension}</td>\n                <td>{node.birthTime}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allFile(filter:{relativeDirectory:{eq:\"pages\"}}){\n      edges {\n        node {\n          id\n          base\n          prettySize\n          extension\n          birthTime(fromNow: true)\n          relativeDirectory\n          relativePath\n        }\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\";\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n\n    // Define the initial state:\n    this.state = {};\n  }\n\n  componentDidMount () {\n    console.log('ComponentDidMount -->');\n  }\n\n  render () {\n    const { siteTitle } = this.props\n\n    return (\n      <header className=\"header\">\n        <h1 className=\"header__logo\">Hola, I'm <Link to=\"/\">{siteTitle}.</Link></h1>\n        <nav className=\"header__nav\">\n          <ul>\n            <li><Link to=\"/about\" activeClassName=\"active\">About</Link></li>\n            <li><Link to=\"/blog/\" activeClassName=\"active\">Blog</Link></li>\n          </ul>\n        </nav>\n        {/*<div className=\"header__container\">\n          <h2><strong>Front-end senior developer</strong> from 2006, UX/UI Engineer, working in remote, globally with companies, startups and agencies.</h2>\n        </div>*/}\n      </header>\n    )\n  }\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query HeaderQuery {\n      site {\n        siteMetadata {\n          title\n          role\n          description\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header className=\"header\" \n        siteTitle={data.site.siteMetadata.title}\n        siteRole={data.site.siteMetadata.role}\n        siteDescription={data.site.siteMetadata.description}\n      />\n      <div className=\"container\">\n        {children}\n      </div>\n      <footer className=\"footer\">\n        © {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n      </footer>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}