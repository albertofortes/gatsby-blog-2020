{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","Header","_this","_React$Component","call","this","state","componentDidMount","console","log","render","_this$props","props","siteTitle","siteRole","siteDescription","react_default","className","gatsby_browser_entry","to","activeClassName","Component","Layout","children","data","_3254742343","Fragment","header","site","siteMetadata","role","description","Date","getFullYear","href","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-pages-404-js-8ceefe1de559428b9fb0.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\";\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n\n    // Define the initial state:\n    this.state = {};\n  }\n\n  componentDidMount () {\n    console.log('ComponentDidMount -->');\n  }\n\n  render () {\n    const { siteTitle, siteRole, siteDescription } = this.props\n\n    return (\n      <header className=\"header\">\n        <h1 className=\"header__logo\">Hola, I'm <Link to=\"/\">{siteTitle}.</Link></h1>\n        <nav className=\"header__nav\">\n          <ul>\n            <li><Link to=\"/about\" activeClassName=\"active\">About</Link></li>\n            <li><Link to=\"/blog/\" activeClassName=\"active\">Blog</Link></li>\n          </ul>\n        </nav>\n        {/*<div className=\"header__container\">\n          <h2><strong>Front-end senior developer</strong> from 2006, UX/UI Engineer, working in remote, globally with companies, startups and agencies.</h2>\n        </div>*/}\n      </header>\n    )\n  }\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query HeaderQuery {\n      site {\n        siteMetadata {\n          title\n          role\n          description\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header className=\"header\" \n        siteTitle={data.site.siteMetadata.title}\n        siteRole={data.site.siteMetadata.role}\n        siteDescription={data.site.siteMetadata.description}\n      />\n      <div className=\"container\">\n        {children}\n      </div>\n      <footer className=\"footer\">\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n      </footer>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}